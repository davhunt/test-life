#!/bin/bash

#PBS -l nodes=1:ppn=10
#PBS -l vmem=24gb
#PBS -l walltime=10:00:00
#PBS -N life

pwd=$PWD
dwi=$(jq -r .dwi config.json)
parentdir="$(dirname "$dwi")"

#round bvals
cd app-datanormalize
#clean up previous job (just in case)
rm -f finished

module load singularity 2> /dev/null

#create config.json

echo $( jq -n \
		--arg bvals "$parentdir/dwi.bvals" \
		--arg bvecs "$parentdir/dwi.bvecs" \
		--arg dwi "$dwi" \
		'{"bvals": $bvals, "bvecs": $bvecs, "dwi": $dwi, "xflip": false, "yflip": false, "zflip": false}' ) > config.json


echo "starting main"
pwd
#singularity exec -e docker://brainlife/normalizedata

singularity exec -e docker://brainlife/mcr:neurodebian1604-r2017a pwd && ls -la && ls -l msa && ./msa/main
#singularity exec -e docker://brainlife/mcr:neurodebian1604-r2017a ./msa/main


#export MATLABPATH=$MATLABPATH:$SERVICE_DIR
#time matlab -nodisplay -nosplash -r main

#check for output files
if [ -s dwi.bvals ]; then
	echo 0 > finished
else
	echo "bvecs or bvals  missing"
	echo 1 > finished
	exit 1
fi
mv dwi.bvals $parentdir/dwi.bvals && mv dwi.bvecs $parentdir/dwi.bvecs && echo ok
cd $pwd
#cd /N/u/davhunt/Carbonate/app-life2/app-life/

set -e
set -x

export MAXMEM=19000000
# make sure dwi is in 'RAS' orientation
#time singularity exec docker://brainlife/fsl ./check_orientation.sh

#time singularity exec docker://brainlife/mcr:2018a ./compiled/main
time singularity exec -e docker://brainlife/mcr:neurodebian1604-r2017a bash -c "pwd && cd /N/u/davhunt/Carbonate/app-life2/app-life && ./compiled/main"

#make sure output_fe.mat exists (matlab doesn't set exit code!)
if [ ! -s output_fe.mat ];
then
    echo "output_fe.mat missing"
    exit 1
fi
